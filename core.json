[
 {
  "fun": "cdef from_ptr(cimgui.ImGuiContext* ptr)",
  "class": "_ImGuiContext"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImDrawCmd* ptr)",
  "class": "_DrawCmd"
 },
 {
  "fun": "def texture_id(self)",
  "class": "_DrawCmd"
 },
 {
  "fun": "def clip_rect(self)",
  "class": "_DrawCmd"
 },
 {
  "fun": "def elem_count(self)",
  "class": "_DrawCmd"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImDrawList* ptr)",
  "class": "_DrawList"
 },
 {
  "fun": "def cmd_buffer_size(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def cmd_buffer_data(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def vtx_buffer_size(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def vtx_buffer_data(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def idx_buffer_size(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def idx_buffer_data(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def flags(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def flags(self, cimgui.ImDrawListFlags flags)",
  "class": "_DrawList"
 },
 {
  "fun": "def push_clip_rect_full_screen(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def pop_clip_rect(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def push_texture_id(self, texture_id)",
  "class": "_DrawList"
 },
 {
  "fun": "def pop_texture_id(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def get_clip_rect_min(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def get_clip_rect_max(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def channels_split(self, int channels_count)",
  "class": "_DrawList"
 },
 {
  "fun": "def channels_set_current(self, int idx)",
  "class": "_DrawList"
 },
 {
  "fun": "def channels_merge(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def prim_reserve(self, int idx_count, int vtx_count)",
  "class": "_DrawList"
 },
 {
  "fun": "def prim_unreserve(self, int idx_count, int vtx_count)",
  "class": "_DrawList"
 },
 {
  "fun": "def prim_rect(self, float a_x, float a_y, float b_x, float b_y, cimgui.ImU32 color = 0xFFFFFFFF)",
  "class": "_DrawList"
 },
 {
  "fun": "def prim_write_vtx(self, float pos_x, float pos_y, float u, float v, cimgui.ImU32 color = 0xFFFFFFFF)",
  "class": "_DrawList"
 },
 {
  "fun": "def prim_write_idx(self, cimgui.ImDrawIdx idx)",
  "class": "_DrawList"
 },
 {
  "fun": "def prim_vtx(self, float pos_x, float pos_y, float u, float v, cimgui.ImU32 color = 0xFFFFFFFF)",
  "class": "_DrawList"
 },
 {
  "fun": "def commands(self)",
  "class": "_DrawList"
 },
 {
  "fun": "def create()",
  "class": "GuiStyle"
 },
 {
  "fun": "def alpha(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def alpha(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_padding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_padding(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_min_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_min_size(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_rounding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_rounding(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_border_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_border_size(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def child_rounding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def child_rounding(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def child_border_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def child_border_size(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def popup_rounding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def popup_rounding(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def popup_border_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def popup_border_size(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_title_align(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_title_align(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_menu_button_position(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def window_menu_button_position(self, cimgui.ImGuiDir value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def frame_padding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def frame_padding(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def frame_rounding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def frame_rounding(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def frame_border_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def frame_border_size(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def item_spacing(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def item_spacing(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def item_inner_spacing(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def item_inner_spacing(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def cell_padding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def cell_padding(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def touch_extra_padding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def touch_extra_padding(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def indent_spacing(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def indent_spacing(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def columns_min_spacing(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def columns_min_spacing(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def scrollbar_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def scrollbar_size(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def scrollbar_rounding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def scrollbar_rounding(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def grab_min_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def grab_min_size(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def grab_rounding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def grab_rounding(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def log_slider_deadzone(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def log_slider_deadzone(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def tab_rounding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def tab_rounding(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def tab_border_size(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def tab_border_size(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def tab_min_width_for_close_button(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def tab_min_width_for_close_button(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def color_button_position(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def color_button_position(self, cimgui.ImGuiDir value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def button_text_align(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def button_text_align(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def selectable_text_align(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def selectable_text_align(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def display_window_padding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def display_window_padding(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def display_safe_area_padding(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def display_safe_area_padding(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def mouse_cursor_scale(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def mouse_cursor_scale(self, value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def anti_aliased_lines(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def anti_aliased_lines(self, cimgui.bool value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def anti_aliased_line_use_tex(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def anti_aliased_line_use_tex(self, cimgui.bool value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def anti_aliased_fill(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def anti_aliased_fill(self, cimgui.bool value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def curve_tessellation_tolerance(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def curve_tessellation_tolerance(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def circle_segment_max_error(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def circle_segment_max_error(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def circle_tessellation_max_error(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def circle_tessellation_max_error(self, float value)",
  "class": "GuiStyle"
 },
 {
  "fun": "def color(self, cimgui.ImGuiCol variable)",
  "class": "GuiStyle"
 },
 {
  "fun": "def colors(self)",
  "class": "GuiStyle"
 },
 {
  "fun": "def scale_all_sizes(self, float scale_factor)",
  "class": "GuiStyle"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImGuiTableColumnSortSpecs* ptr)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def column_user_id(self)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def column_user_id(self, cimgui.ImGuiID column_user_id)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def column_index(self)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def column_index(self, cimgui.ImS16 column_index)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def sort_order(self)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def sort_order(self, cimgui.ImS16 sort_order)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def sort_direction(self)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def sort_direction(self, cimgui.ImGuiSortDirection sort_direction)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImGuiTableSortSpecs* ptr)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "cdef _get_item(self, size_t idx)",
  "class": "_ImGuiTableColumnSortSpecs"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_ImGuiTableSortSpecs"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImGuiTableSortSpecs* ptr)",
  "class": "_ImGuiTableSortSpecs"
 },
 {
  "fun": "def specs(self)",
  "class": "_ImGuiTableSortSpecs"
 },
 {
  "fun": "def specs_count(self)",
  "class": "_ImGuiTableSortSpecs"
 },
 {
  "fun": "def specs_dirty(self)",
  "class": "_ImGuiTableSortSpecs"
 },
 {
  "fun": "def specs_dirty(self, cimgui.bool specs_dirty)",
  "class": "_ImGuiTableSortSpecs"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImGuiViewport* ptr)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def id(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def parent_viewport_id(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def dpi_scale(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def flags(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def pos(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def size(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def work_pos(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def work_size(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def draw_data(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def pos(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def platform_request_resize(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def platform_request_move(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def platform_request_close(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def get_center(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def get_work_center(self)",
  "class": "_ImGuiViewport"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImGuiWindowClass* ptr)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def class_id(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def parent_viewport_id(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def viewport_flags_override_set(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def viewport_flags_override_clear(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def tab_item_flags_override_set(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def docknode_flags_override_set(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def docking_always_tab_bar(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def docking_allow_unclassed(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def imgui_window_class(self)",
  "class": "ImGuiWindowClass"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_DrawData"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImDrawData* ptr)",
  "class": "_DrawData"
 },
 {
  "fun": "def deindex_all_buffers(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def scale_clip_rects(self, width, height)",
  "class": "_DrawData"
 },
 {
  "fun": "def valid(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def cmd_count(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def total_vtx_count(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def display_pos(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def display_size(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def frame_buffer_scale(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def total_idx_count(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def commands_lists(self)",
  "class": "_DrawData"
 },
 {
  "fun": "def owner_viewport(self)",
  "class": "_DrawData"
 },
 {
  "fun": "cdef from_ptr(const cimgui.ImWchar* ptr)",
  "class": "_StaticGlyphRanges"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImFont* ptr)",
  "class": "_Font"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImFontAtlas* ptr)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def add_font_default(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def clear_tex_data(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def clear_input_data(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def clear_fonts(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def clear(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_default(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_korean(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_japanese(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_chinese_full(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_chinese(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_cyrillic(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_thai(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_vietnamese(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_glyph_ranges_latin(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_tex_data_as_alpha8(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def get_tex_data_as_rgba32(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def texture_id(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def texture_width(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def texture_height(self)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def texture_id(self, value)",
  "class": "_FontAtlas"
 },
 {
  "fun": "def config_flags(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_flags(self, cimgui.ImGuiConfigFlags value)",
  "class": "_IO"
 },
 {
  "fun": "def backend_flags(self)",
  "class": "_IO"
 },
 {
  "fun": "def backend_flags(self, cimgui.ImGuiBackendFlags value)",
  "class": "_IO"
 },
 {
  "fun": "def display_size(self)",
  "class": "_IO"
 },
 {
  "fun": "def display_size(self, value)",
  "class": "_IO"
 },
 {
  "fun": "def delta_time(self)",
  "class": "_IO"
 },
 {
  "fun": "def delta_time(self, float time)",
  "class": "_IO"
 },
 {
  "fun": "def ini_saving_rate(self)",
  "class": "_IO"
 },
 {
  "fun": "def ini_saving_rate(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def log_file_name(self)",
  "class": "_IO"
 },
 {
  "fun": "def log_file_name(self, char* value)",
  "class": "_IO"
 },
 {
  "fun": "def ini_file_name(self)",
  "class": "_IO"
 },
 {
  "fun": "def ini_file_name(self, char* value)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_double_click_time(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_double_click_time(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_double_click_max_distance(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_double_click_max_distance(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_drag_threshold(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_drag_threshold(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def key_map(self)",
  "class": "_IO"
 },
 {
  "fun": "def key_repeat_delay(self)",
  "class": "_IO"
 },
 {
  "fun": "def key_repeat_delay(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def key_repeat_rate(self)",
  "class": "_IO"
 },
 {
  "fun": "def key_repeat_rate(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def fonts(self)",
  "class": "_IO"
 },
 {
  "fun": "def font_global_scale(self)",
  "class": "_IO"
 },
 {
  "fun": "def font_global_scale(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def font_allow_user_scaling(self)",
  "class": "_IO"
 },
 {
  "fun": "def font_allow_user_scaling(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def display_fb_scale(self)",
  "class": "_IO"
 },
 {
  "fun": "def display_fb_scale(self, value)",
  "class": "_IO"
 },
 {
  "fun": "def config_mac_osx_behaviors(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_mac_osx_behaviors(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def config_cursor_blink(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_cursor_blink(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def config_drag_click_to_input_text(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_drag_click_to_input_text(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def config_windows_resize_from_edges(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_windows_resize_from_edges(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def config_windows_move_from_title_bar_only(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_windows_move_from_title_bar_only(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def config_memory_compact_timer(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_memory_compact_timer(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def get_clipboard_text_fn(self)",
  "class": "_IO"
 },
 {
  "fun": "def get_clipboard_text_fn(self, func)",
  "class": "_IO"
 },
 {
  "fun": "def set_clipboard_text_fn(self)",
  "class": "_IO"
 },
 {
  "fun": "def set_clipboard_text_fn(self, func)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_pos(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_pos(self, value)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_down(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_wheel(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_wheel(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_wheel_horizontal(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_wheel_horizontal(self, float value)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_draw_cursor(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_draw_cursor(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def key_ctrl(self)",
  "class": "_IO"
 },
 {
  "fun": "def key_ctrl(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def key_shift(self)",
  "class": "_IO"
 },
 {
  "fun": "def key_shift(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def key_alt(self)",
  "class": "_IO"
 },
 {
  "fun": "def key_alt(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def key_super(self)",
  "class": "_IO"
 },
 {
  "fun": "def key_super(self, cimgui.bool value)",
  "class": "_IO"
 },
 {
  "fun": "def keys_down(self)",
  "class": "_IO"
 },
 {
  "fun": "def nav_inputs(self)",
  "class": "_IO"
 },
 {
  "fun": "def add_input_character(self, unsigned int c)",
  "class": "_IO"
 },
 {
  "fun": "def add_input_character_utf16(self, str utf16_chars)",
  "class": "_IO"
 },
 {
  "fun": "def add_input_characters_utf8(self, str utf8_chars)",
  "class": "_IO"
 },
 {
  "fun": "def clear_input_characters(self)",
  "class": "_IO"
 },
 {
  "fun": "def want_capture_mouse(self)",
  "class": "_IO"
 },
 {
  "fun": "def want_capture_keyboard(self)",
  "class": "_IO"
 },
 {
  "fun": "def want_text_input(self)",
  "class": "_IO"
 },
 {
  "fun": "def want_set_mouse_pos(self)",
  "class": "_IO"
 },
 {
  "fun": "def want_save_ini_settings(self)",
  "class": "_IO"
 },
 {
  "fun": "def nav_active(self)",
  "class": "_IO"
 },
 {
  "fun": "def nav_visible(self)",
  "class": "_IO"
 },
 {
  "fun": "def framerate(self)",
  "class": "_IO"
 },
 {
  "fun": "def metrics_render_vertices(self)",
  "class": "_IO"
 },
 {
  "fun": "def metrics_render_indices(self)",
  "class": "_IO"
 },
 {
  "fun": "def metrics_render_windows(self)",
  "class": "_IO"
 },
 {
  "fun": "def metrics_active_windows(self)",
  "class": "_IO"
 },
 {
  "fun": "def metrics_active_allocations(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_delta(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_docking_no_split(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_docking_with_shift(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_docking_always_tab_bar(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_docking_transparent_payload(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_viewports_no_auto_merge(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_viewports_no_task_bar_icon(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_viewports_no_decoration(self)",
  "class": "_IO"
 },
 {
  "fun": "def config_viewports_no_default_parent(self)",
  "class": "_IO"
 },
 {
  "fun": "def mouse_hovered_viewport(self)",
  "class": "_IO"
 },
 {
  "fun": "def populate(self, callback_fn, user_data)",
  "class": "_IO"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImGuiInputTextCallbackData* ptr)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def event_flag(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def flags(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def user_data(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def event_char(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def event_char(self, str event_char)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def event_key(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def buffer(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def buffer_text_length(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def buffer_size(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def buffer_dirty(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def buffer_dirty(self, bool dirty)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def cursor_pos(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def cursor_pos(self, int pos)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def selection_start(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def selection_start(self, int start)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def selection_end(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def selection_end(self, int end)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def delete_chars(self, int pos, int bytes_count)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def insert_chars(self, int pos, str text)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def select_all(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def clear_selection(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "def has_selection(self)",
  "class": "_ImGuiInputTextCallbackData"
 },
 {
  "fun": "cdef from_ptr(cimgui.ImGuiSizeCallbackData* ptr)",
  "class": "_ImGuiSizeCallbackData"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_ImGuiSizeCallbackData"
 },
 {
  "fun": "def user_data(self)",
  "class": "_ImGuiSizeCallbackData"
 },
 {
  "fun": "def pos(self)",
  "class": "_ImGuiSizeCallbackData"
 },
 {
  "fun": "def current_size(self)",
  "class": "_ImGuiSizeCallbackData"
 },
 {
  "fun": "def desired_size(self)",
  "class": "_ImGuiSizeCallbackData"
 },
 {
  "fun": "def desired_size(self, tuple size)",
  "class": "_ImGuiSizeCallbackData"
 },
 {
  "fun": "def get_io()",
  "class": "static"
 },
 {
  "fun": "def get_style()",
  "class": "static"
 },
 {
  "fun": "def new_frame()",
  "class": "static"
 },
 {
  "fun": "def end_frame()",
  "class": "static"
 },
 {
  "fun": "def render()",
  "class": "static"
 },
 {
  "fun": "def show_user_guide()",
  "class": "static"
 },
 {
  "fun": "def get_version()",
  "class": "static"
 },
 {
  "fun": "def style_colors_dark(GuiStyle dst = None)",
  "class": "static"
 },
 {
  "fun": "def style_colors_classic(GuiStyle dst = None)",
  "class": "static"
 },
 {
  "fun": "def style_colors_light(GuiStyle dst = None)",
  "class": "static"
 },
 {
  "fun": "def show_style_editor(GuiStyle style=None)",
  "class": "static"
 },
 {
  "fun": "def show_test_window()",
  "class": "static"
 },
 {
  "fun": "def show_style_selector(str label)",
  "class": "static"
 },
 {
  "fun": "def show_font_selector(str label)",
  "class": "static"
 },
 {
  "fun": "def begin(str label, closable=False, cimgui.ImGuiWindowFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def get_draw_data()",
  "class": "static"
 },
 {
  "fun": "def end()",
  "class": "static"
 },
 {
  "fun": "def end_child()",
  "class": "static"
 },
 {
  "fun": "def get_content_region_max()",
  "class": "static"
 },
 {
  "fun": "def get_content_region_available()",
  "class": "static"
 },
 {
  "fun": "def get_content_region_available_width()",
  "class": "static"
 },
 {
  "fun": "def get_window_content_region_min()",
  "class": "static"
 },
 {
  "fun": "def get_window_content_region_max()",
  "class": "static"
 },
 {
  "fun": "def get_window_content_region_width()",
  "class": "static"
 },
 {
  "fun": "def set_window_focus()",
  "class": "static"
 },
 {
  "fun": "def set_window_focus_labeled(str label)",
  "class": "static"
 },
 {
  "fun": "def set_window_size_named(str label, float width, float height, cimgui.ImGuiCond condition = ONCE)",
  "class": "static"
 },
 {
  "fun": "def get_scroll_x()",
  "class": "static"
 },
 {
  "fun": "def get_scroll_y()",
  "class": "static"
 },
 {
  "fun": "def get_scroll_max_x()",
  "class": "static"
 },
 {
  "fun": "def get_scroll_max_y()",
  "class": "static"
 },
 {
  "fun": "def set_scroll_x(float scroll_x)",
  "class": "static"
 },
 {
  "fun": "def set_scroll_y(float scroll_y)",
  "class": "static"
 },
 {
  "fun": "def set_window_font_scale(float scale)",
  "class": "static"
 },
 {
  "fun": "def set_next_window_focus()",
  "class": "static"
 },
 {
  "fun": "def set_next_window_bg_alpha(float alpha)",
  "class": "static"
 },
 {
  "fun": "def get_window_draw_list()",
  "class": "static"
 },
 {
  "fun": "def get_overlay_draw_list()",
  "class": "static"
 },
 {
  "fun": "def get_window_position()",
  "class": "static"
 },
 {
  "fun": "def get_window_dpi_scale()",
  "class": "static"
 },
 {
  "fun": "def get_window_size()",
  "class": "static"
 },
 {
  "fun": "def get_window_width()",
  "class": "static"
 },
 {
  "fun": "def get_window_height()",
  "class": "static"
 },
 {
  "fun": "def set_next_window_content_size(float width, float height)",
  "class": "static"
 },
 {
  "fun": "def set_next_window_viewport(cimgui.ImGuiID viewport_id)",
  "class": "static"
 },
 {
  "fun": "def set_window_position(float x, float y, cimgui.ImGuiCond condition = ALWAYS)",
  "class": "static"
 },
 {
  "fun": "def set_window_position_labeled(str label, float x, float y, cimgui.ImGuiCond condition = ALWAYS)",
  "class": "static"
 },
 {
  "fun": "def set_window_collapsed(bool collapsed, cimgui.ImGuiCond condition = ALWAYS)",
  "class": "static"
 },
 {
  "fun": "def set_window_collapsed_labeled(str label, bool collapsed, cimgui.ImGuiCond condition = ALWAYS)",
  "class": "static"
 },
 {
  "fun": "def is_window_collapsed()",
  "class": "static"
 },
 {
  "fun": "def is_window_appearing()",
  "class": "static"
 },
 {
  "fun": "def tree_node(str text, cimgui.ImGuiTreeNodeFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def tree_pop()",
  "class": "static"
 },
 {
  "fun": "def get_tree_node_to_label_spacing()",
  "class": "static"
 },
 {
  "fun": "def set_next_item_open(bool is_open, cimgui.ImGuiCond condition = 0)",
  "class": "static"
 },
 {
  "fun": "def listbox_header( # OBSOLETED in 1.81 (from February 2021)",
  "class": "static"
 },
 {
  "fun": "def end_list_box()",
  "class": "static"
 },
 {
  "fun": "def listbox_footer()",
  "class": "static"
 },
 {
  "fun": "def set_tooltip(str text)",
  "class": "static"
 },
 {
  "fun": "def begin_tooltip()",
  "class": "static"
 },
 {
  "fun": "def end_tooltip()",
  "class": "static"
 },
 {
  "fun": "def begin_main_menu_bar()",
  "class": "static"
 },
 {
  "fun": "def end_main_menu_bar()",
  "class": "static"
 },
 {
  "fun": "def begin_menu_bar()",
  "class": "static"
 },
 {
  "fun": "def end_menu_bar()",
  "class": "static"
 },
 {
  "fun": "def begin_menu(str label, enabled=True)",
  "class": "static"
 },
 {
  "fun": "def end_menu()",
  "class": "static"
 },
 {
  "fun": "def open_popup(str label, cimgui.ImGuiPopupFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def open_popup_on_item_click(str label = None, cimgui.ImGuiPopupFlags popup_flags = 1)",
  "class": "static"
 },
 {
  "fun": "def begin_popup(str label, cimgui.ImGuiWindowFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def begin_popup_modal(str title, visible=None, cimgui.ImGuiWindowFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def begin_popup_context_item(str label = None, cimgui.ImGuiPopupFlags mouse_button = 1)",
  "class": "static"
 },
 {
  "fun": "def begin_popup_context_void(str label = None, cimgui.ImGuiPopupFlags popup_flags = 1)",
  "class": "static"
 },
 {
  "fun": "def is_popup_open( str label,  cimgui.ImGuiPopupFlags flags = 0)",
  "class": "static"
 },
 {
  "fun": "def end_popup()",
  "class": "static"
 },
 {
  "fun": "def close_current_popup()",
  "class": "static"
 },
 {
  "fun": "def end_table()",
  "class": "static"
 },
 {
  "fun": "def table_next_column()",
  "class": "static"
 },
 {
  "fun": "def table_set_column_index(int column_n)",
  "class": "static"
 },
 {
  "fun": "def table_setup_scroll_freez(int cols, int rows)",
  "class": "static"
 },
 {
  "fun": "def table_headers_row()",
  "class": "static"
 },
 {
  "fun": "def table_header(str label)",
  "class": "static"
 },
 {
  "fun": "def table_get_sort_specs()",
  "class": "static"
 },
 {
  "fun": "def table_get_column_count()",
  "class": "static"
 },
 {
  "fun": "def table_get_column_index()",
  "class": "static"
 },
 {
  "fun": "def table_get_row_index()",
  "class": "static"
 },
 {
  "fun": "def table_get_column_name(int column_n = -1)",
  "class": "static"
 },
 {
  "fun": "def table_get_column_flags(int column_n = -1)",
  "class": "static"
 },
 {
  "fun": "def text(str text)",
  "class": "static"
 },
 {
  "fun": "def text_colored(str text, float r, float g, float b, float a=1.)",
  "class": "static"
 },
 {
  "fun": "def text_disabled(str text)",
  "class": "static"
 },
 {
  "fun": "def text_wrapped(str text)",
  "class": "static"
 },
 {
  "fun": "def label_text(str label, str text)",
  "class": "static"
 },
 {
  "fun": "def text_unformatted(str text)",
  "class": "static"
 },
 {
  "fun": "def bullet()",
  "class": "static"
 },
 {
  "fun": "def bullet_text(str text)",
  "class": "static"
 },
 {
  "fun": "def button(str label, width=0, height=0)",
  "class": "static"
 },
 {
  "fun": "def small_button(str label)",
  "class": "static"
 },
 {
  "fun": "def arrow_button(str label, cimgui.ImGuiDir direction = DIRECTION_NONE)",
  "class": "static"
 },
 {
  "fun": "def invisible_button(str identifier, float width, float height, cimgui.ImGuiButtonFlags flags = 0)",
  "class": "static"
 },
 {
  "fun": "def checkbox(str label, cimgui.bool state)",
  "class": "static"
 },
 {
  "fun": "def checkbox_flags(str label, unsigned int flags, unsigned int flags_value)",
  "class": "static"
 },
 {
  "fun": "def radio_button(str label, cimgui.bool active)",
  "class": "static"
 },
 {
  "fun": "def combo(str label, int current, list items, int height_in_items=-1)",
  "class": "static"
 },
 {
  "fun": "def color_edit3(str label, float r, float g, float b, cimgui.ImGuiColorEditFlags flags = 0)",
  "class": "static"
 },
 {
  "fun": "def color_edit4(str label, float r, float g, float b, float a, cimgui.ImGuiColorEditFlags flags = 0)",
  "class": "static"
 },
 {
  "fun": "def progress_bar(float fraction, size = (-FLOAT_MIN,0), str overlay = \"\")",
  "class": "static"
 },
 {
  "fun": "def set_item_default_focus()",
  "class": "static"
 },
 {
  "fun": "def set_keyboard_focus_here(int offset = 0)",
  "class": "static"
 },
 {
  "fun": "def is_item_focused()",
  "class": "static"
 },
 {
  "fun": "def is_item_active()",
  "class": "static"
 },
 {
  "fun": "def is_item_clicked(cimgui.ImGuiMouseButton mouse_button = 0)",
  "class": "static"
 },
 {
  "fun": "def is_item_visible()",
  "class": "static"
 },
 {
  "fun": "def is_item_edited()",
  "class": "static"
 },
 {
  "fun": "def is_item_activated()",
  "class": "static"
 },
 {
  "fun": "def is_item_deactivated()",
  "class": "static"
 },
 {
  "fun": "def is_item_deactivated_after_edit()",
  "class": "static"
 },
 {
  "fun": "def is_item_toggled_open()",
  "class": "static"
 },
 {
  "fun": "def is_any_item_hovered()",
  "class": "static"
 },
 {
  "fun": "def is_any_item_active()",
  "class": "static"
 },
 {
  "fun": "def is_any_item_focused()",
  "class": "static"
 },
 {
  "fun": "def get_item_rect_min()",
  "class": "static"
 },
 {
  "fun": "def get_item_rect_max()",
  "class": "static"
 },
 {
  "fun": "def get_item_rect_size()",
  "class": "static"
 },
 {
  "fun": "def set_item_allow_overlap()",
  "class": "static"
 },
 {
  "fun": "def get_main_viewport()",
  "class": "static"
 },
 {
  "fun": "def get_window_viewport()",
  "class": "static"
 },
 {
  "fun": "def is_rect_visible(float size_width, float size_height)",
  "class": "static"
 },
 {
  "fun": "def get_style_color_name(int index)",
  "class": "static"
 },
 {
  "fun": "def get_time()",
  "class": "static"
 },
 {
  "fun": "def get_background_draw_list()",
  "class": "static"
 },
 {
  "fun": "def get_foreground_draw_list()",
  "class": "static"
 },
 {
  "fun": "def get_key_index(int key)",
  "class": "static"
 },
 {
  "fun": "def is_key_pressed(int key_index, bool repeat = False)",
  "class": "static"
 },
 {
  "fun": "def is_key_down(int key_index)",
  "class": "static"
 },
 {
  "fun": "def is_mouse_double_clicked(int button = 0)",
  "class": "static"
 },
 {
  "fun": "def is_mouse_clicked(int button = 0, bool repeat = False)",
  "class": "static"
 },
 {
  "fun": "def is_mouse_released(int button = 0)",
  "class": "static"
 },
 {
  "fun": "def is_mouse_down(int button = 0)",
  "class": "static"
 },
 {
  "fun": "def is_mouse_dragging(int button, float lock_threshold = -1.0)",
  "class": "static"
 },
 {
  "fun": "def get_mouse_drag_delta(int button=0, float lock_threshold = -1.0)",
  "class": "static"
 },
 {
  "fun": "def get_mouse_pos()",
  "class": "static"
 },
 {
  "fun": "def reset_mouse_drag_delta(int button = 0)",
  "class": "static"
 },
 {
  "fun": "def get_mouse_cursor()",
  "class": "static"
 },
 {
  "fun": "def set_mouse_cursor(cimgui.ImGuiMouseCursor mouse_cursor_type)",
  "class": "static"
 },
 {
  "fun": "def capture_mouse_from_app(bool want_capture_mouse_value = True)",
  "class": "static"
 },
 {
  "fun": "def get_clipboard_text()",
  "class": "static"
 },
 {
  "fun": "def load_ini_settings_from_disk(str ini_file_name)",
  "class": "static"
 },
 {
  "fun": "def load_ini_settings_from_memory(str ini_data)",
  "class": "static"
 },
 {
  "fun": "def save_ini_settings_to_disk(str ini_file_name)",
  "class": "static"
 },
 {
  "fun": "def save_ini_settings_to_memory()",
  "class": "static"
 },
 {
  "fun": "def set_clipboard_text(str text)",
  "class": "static"
 },
 {
  "fun": "def set_scroll_here_x(float center_x_ratio = 0.5)",
  "class": "static"
 },
 {
  "fun": "def set_scroll_here_y(float center_y_ratio = 0.5)",
  "class": "static"
 },
 {
  "fun": "def set_scroll_from_pos_x(float local_x, float center_x_ratio = 0.5)",
  "class": "static"
 },
 {
  "fun": "def set_scroll_from_pos_y(float local_y, float center_y_ratio = 0.5)",
  "class": "static"
 },
 {
  "fun": "def push_font(_Font font)",
  "class": "static"
 },
 {
  "fun": "def pop_font()",
  "class": "static"
 },
 {
  "fun": "cpdef calc_text_size(str text, bool hide_text_after_double_hash = False, float wrap_width = -1.0)",
  "class": "static"
 },
 {
  "fun": "def color_convert_u32_to_float4(cimgui.ImU32 in_)",
  "class": "static"
 },
 {
  "fun": "def color_convert_float4_to_u32(float r, float g, float b, float a)",
  "class": "static"
 },
 {
  "fun": "def color_convert_rgb_to_hsv(float r, float g, float b)",
  "class": "static"
 },
 {
  "fun": "def color_convert_hsv_to_rgb(float h, float s, float v)",
  "class": "static"
 },
 {
  "fun": "cpdef push_style_var(cimgui.ImGuiStyleVar variable, value)",
  "class": "static"
 },
 {
  "fun": "cpdef pop_style_var(unsigned int count=1)",
  "class": "static"
 },
 {
  "fun": "cpdef get_font_size()",
  "class": "static"
 },
 {
  "fun": "cpdef get_style_color_vec_4(cimgui.ImGuiCol idx)",
  "class": "static"
 },
 {
  "fun": "cpdef get_font_tex_uv_white_pixel()",
  "class": "static"
 },
 {
  "fun": "cpdef get_color_u32_idx(cimgui.ImGuiCol idx, float alpha_mul = 1.0)",
  "class": "static"
 },
 {
  "fun": "cpdef get_color_u32_rgba(float r, float g, float b, float a)",
  "class": "static"
 },
 {
  "fun": "cpdef get_color_u32(cimgui.ImU32 col)",
  "class": "static"
 },
 {
  "fun": "cpdef push_item_width(float item_width)",
  "class": "static"
 },
 {
  "fun": "cpdef pop_item_width()",
  "class": "static"
 },
 {
  "fun": "cpdef set_next_item_width(float item_width)",
  "class": "static"
 },
 {
  "fun": "cpdef calculate_item_width()",
  "class": "static"
 },
 {
  "fun": "cpdef push_text_wrap_pos(float wrap_pos_x = 0.0)",
  "class": "static"
 },
 {
  "fun": "cpdef pop_text_wrap_pos()",
  "class": "static"
 },
 {
  "fun": "cpdef push_allow_keyboard_focus(bool allow_focus)",
  "class": "static"
 },
 {
  "fun": "cpdef pop_allow_keyboard_focus()",
  "class": "static"
 },
 {
  "fun": "cpdef push_button_repeat(bool repeat)",
  "class": "static"
 },
 {
  "fun": "cpdef pop_button_repeat()",
  "class": "static"
 },
 {
  "fun": "cpdef pop_style_color(unsigned int count=1)",
  "class": "static"
 },
 {
  "fun": "def separator()",
  "class": "static"
 },
 {
  "fun": "def same_line(float position=0.0, float spacing=-1.0)",
  "class": "static"
 },
 {
  "fun": "def new_line()",
  "class": "static"
 },
 {
  "fun": "def spacing()",
  "class": "static"
 },
 {
  "fun": "def dummy(width, height)",
  "class": "static"
 },
 {
  "fun": "def indent(float width=0.0)",
  "class": "static"
 },
 {
  "fun": "def unindent(float width=0.0)",
  "class": "static"
 },
 {
  "fun": "def columns(int count=1, str identifier=None, bool border=True)",
  "class": "static"
 },
 {
  "fun": "def next_column()",
  "class": "static"
 },
 {
  "fun": "def get_column_index()",
  "class": "static"
 },
 {
  "fun": "def get_column_offset(int column_index=-1)",
  "class": "static"
 },
 {
  "fun": "def set_column_offset(int column_index, float offset_x)",
  "class": "static"
 },
 {
  "fun": "def get_column_width(int column_index=-1)",
  "class": "static"
 },
 {
  "fun": "def set_column_width(int column_index, float width)",
  "class": "static"
 },
 {
  "fun": "def get_columns_count()",
  "class": "static"
 },
 {
  "fun": "def begin_tab_bar(str identifier, cimgui.ImGuiTabBarFlags flags = 0)",
  "class": "static"
 },
 {
  "fun": "def end_tab_bar()",
  "class": "static"
 },
 {
  "fun": "def begin_tab_item(str label, opened = None, cimgui.ImGuiTabItemFlags flags = 0)",
  "class": "static"
 },
 {
  "fun": "def end_tab_item()",
  "class": "static"
 },
 {
  "fun": "def tab_item_button(str label, cimgui.ImGuiTabItemFlags flags = 0)",
  "class": "static"
 },
 {
  "fun": "def set_tab_item_closed(str tab_or_docked_window_label)",
  "class": "static"
 },
 {
  "fun": "def dockspace(cimgui.ImGuiID id, tuple size=(0, 0), cimgui.ImGuiDockNodeFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def get_window_dock_id()",
  "class": "static"
 },
 {
  "fun": "def is_window_docked()",
  "class": "static"
 },
 {
  "fun": "def begin_drag_drop_source(cimgui.ImGuiDragDropFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def set_drag_drop_payload(str type, bytes data, cimgui.ImGuiCond condition=0)",
  "class": "static"
 },
 {
  "fun": "def end_drag_drop_source()",
  "class": "static"
 },
 {
  "fun": "def begin_drag_drop_target()",
  "class": "static"
 },
 {
  "fun": "def _require_pointer(self)",
  "class": "_ImGuiPayload"
 },
 {
  "fun": "cdef from_ptr(const cimgui.ImGuiPayload* ptr)",
  "class": "_ImGuiPayload"
 },
 {
  "fun": "def data(self)",
  "class": "_ImGuiPayload"
 },
 {
  "fun": "def data_size(self)",
  "class": "_ImGuiPayload"
 },
 {
  "fun": "def is_preview(self)",
  "class": "_ImGuiPayload"
 },
 {
  "fun": "def is_delivery(self)",
  "class": "_ImGuiPayload"
 },
 {
  "fun": "def is_data_type(self, str type)",
  "class": "_ImGuiPayload"
 },
 {
  "fun": "def accept_drag_drop_payload(str type, cimgui.ImGuiDragDropFlags flags=0)",
  "class": "static"
 },
 {
  "fun": "def end_drag_drop_target()",
  "class": "static"
 },
 {
  "fun": "def get_drag_drop_payload()",
  "class": "static"
 },
 {
  "fun": "def pop_clip_rect()",
  "class": "static"
 },
 {
  "fun": "def begin_group()",
  "class": "static"
 },
 {
  "fun": "def end_group()",
  "class": "static"
 },
 {
  "fun": "def get_cursor_pos()",
  "class": "static"
 },
 {
  "fun": "def get_cursor_pos_x()",
  "class": "static"
 },
 {
  "fun": "def get_cursor_pos_y()",
  "class": "static"
 },
 {
  "fun": "def set_cursor_pos_x(float x)",
  "class": "static"
 },
 {
  "fun": "def set_cursor_pos_y(float y)",
  "class": "static"
 },
 {
  "fun": "def get_cursor_start_pos()",
  "class": "static"
 },
 {
  "fun": "def get_cursor_screen_pos()",
  "class": "static"
 },
 {
  "fun": "def align_text_to_frame_padding()",
  "class": "static"
 },
 {
  "fun": "def get_text_line_height()",
  "class": "static"
 },
 {
  "fun": "def get_text_line_height_with_spacing()",
  "class": "static"
 },
 {
  "fun": "def get_frame_height()",
  "class": "static"
 },
 {
  "fun": "def get_frame_height_with_spacing()",
  "class": "static"
 },
 {
  "fun": "def create_context(_FontAtlas shared_font_atlas = None)",
  "class": "static"
 },
 {
  "fun": "def destroy_context(_ImGuiContext ctx = None)",
  "class": "static"
 },
 {
  "fun": "def get_current_context()",
  "class": "static"
 },
 {
  "fun": "def set_current_context(_ImGuiContext ctx)",
  "class": "static"
 },
 {
  "fun": "def push_id(str str_id)",
  "class": "static"
 },
 {
  "fun": "def pop_id()",
  "class": "static"
 },
 {
  "fun": "def get_id(str str_id)",
  "class": "static"
 },
 {
  "fun": "def _ansifeed_text_ansi(str text)",
  "class": "static"
 },
 {
  "fun": "def _ansifeed_text_ansi_colored(str text, float r, float g, float b, float a=1.)",
  "class": "static"
 },
 {
  "fun": "def _py_font(_Font font)",
  "class": "static"
 },
 {
  "fun": "def _py_styled(cimgui.ImGuiStyleVar variable, value)",
  "class": "static"
 },
 {
  "fun": "def _py_scoped(str str_id)",
  "class": "static"
 },
 {
  "fun": "def _py_vertex_buffer_vertex_pos_offset()",
  "class": "static"
 },
 {
  "fun": "def _py_vertex_buffer_vertex_uv_offset()",
  "class": "static"
 },
 {
  "fun": "def _py_vertex_buffer_vertex_col_offset()",
  "class": "static"
 },
 {
  "fun": "def _py_vertex_buffer_vertex_size()",
  "class": "static"
 },
 {
  "fun": "def _py_index_buffer_index_size()",
  "class": "static"
 },
 {
  "fun": "def update_platform_windows()",
  "class": "static"
 },
 {
  "fun": "def destroy_platform_windows()",
  "class": "static"
 },
 {
  "fun": "cdef find_viewport_by_platform_handle(void* platform_handle)",
  "class": "static"
 },
 {
  "fun": "def find_viewport_by_id(cimgui.ImGuiID id)",
  "class": "static"
 }
]